/**
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class InlineResponse20020Orders {
    /**
    * Account number
    */
    'acct'?: string;
    /**
    * Exchange or trading venue
    */
    'exchange'?: string;
    /**
    * Contract identifier
    */
    'conid'?: number;
    /**
    * Order identifier
    */
    'orderId'?: string;
    /**
    * Cash currency
    */
    'cashCcy'?: string;
    /**
    * Quantity outstanding and total quantity concatenated with forward slash separator
    */
    'sizeAndFills'?: number;
    /**
    * Order description
    */
    'orderDesc'?: string;
    /**
    * Formatted ticker description
    */
    'description1'?: string;
    /**
    * Underlying symbol
    */
    'ticker'?: string;
    /**
    * Asset class
    */
    'secType'?: string;
    /**
    * Listing Exchange
    */
    'listingExchange'?: string;
    /**
    * Quantity remaining
    */
    'remainingQuantity'?: number;
    /**
    * Quantity filled
    */
    'filledQuantity'?: number;
    /**
    * Company Name
    */
    'companyName'?: string;
    /**
    * Status of the order
    */
    'status'?: string;
    /**
    * Original order type
    */
    'origOrderType'?: string;
    /**
    * Supports Tax Optimization with 0 for no and 1 for yes
    */
    'supportsTaxOpt'?: number;
    /**
    * Last status update in format YYMMDDhhmms based in GMT
    */
    'lastExecutionTime'?: number;
    /**
    * Last status update unix time in ms
    */
    'lastExecutionTime_r'?: number;
    /**
    * Order type
    */
    'orderType'?: string;
    /**
    * Order reference
    */
    'order_ref'?: string;
    /**
    * Side of order
    */
    'side'?: string;
    /**
    * Time in force
    */
    'timeInForce'?: string;
    /**
    * Price of order
    */
    'price'?: number;
    /**
    * background color in hex format
    */
    'bgColor'?: string;
    /**
    * foreground color in hex format
    */
    'fgColor'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "acct",
            "baseName": "acct",
            "type": "string"
        },
        {
            "name": "exchange",
            "baseName": "exchange",
            "type": "string"
        },
        {
            "name": "conid",
            "baseName": "conid",
            "type": "number"
        },
        {
            "name": "orderId",
            "baseName": "orderId",
            "type": "string"
        },
        {
            "name": "cashCcy",
            "baseName": "cashCcy",
            "type": "string"
        },
        {
            "name": "sizeAndFills",
            "baseName": "sizeAndFills",
            "type": "number"
        },
        {
            "name": "orderDesc",
            "baseName": "orderDesc",
            "type": "string"
        },
        {
            "name": "description1",
            "baseName": "description1",
            "type": "string"
        },
        {
            "name": "ticker",
            "baseName": "ticker",
            "type": "string"
        },
        {
            "name": "secType",
            "baseName": "secType",
            "type": "string"
        },
        {
            "name": "listingExchange",
            "baseName": "listingExchange",
            "type": "string"
        },
        {
            "name": "remainingQuantity",
            "baseName": "remainingQuantity",
            "type": "number"
        },
        {
            "name": "filledQuantity",
            "baseName": "filledQuantity",
            "type": "number"
        },
        {
            "name": "companyName",
            "baseName": "companyName",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string"
        },
        {
            "name": "origOrderType",
            "baseName": "origOrderType",
            "type": "string"
        },
        {
            "name": "supportsTaxOpt",
            "baseName": "supportsTaxOpt",
            "type": "number"
        },
        {
            "name": "lastExecutionTime",
            "baseName": "lastExecutionTime",
            "type": "number"
        },
        {
            "name": "lastExecutionTime_r",
            "baseName": "lastExecutionTime_r",
            "type": "number"
        },
        {
            "name": "orderType",
            "baseName": "orderType",
            "type": "string"
        },
        {
            "name": "order_ref",
            "baseName": "order_ref",
            "type": "string"
        },
        {
            "name": "side",
            "baseName": "side",
            "type": "string"
        },
        {
            "name": "timeInForce",
            "baseName": "timeInForce",
            "type": "string"
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "number"
        },
        {
            "name": "bgColor",
            "baseName": "bgColor",
            "type": "string"
        },
        {
            "name": "fgColor",
            "baseName": "fgColor",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return InlineResponse20020Orders.attributeTypeMap;
    }
}


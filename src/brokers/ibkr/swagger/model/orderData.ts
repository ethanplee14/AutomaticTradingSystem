/**
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { OrderDataWarnings } from './orderDataWarnings';

export class OrderData {
    'clientOrderId'?: string;
    /**
    * ResultVerified or EventCancelled
    */
    'wagerEoL'?: string;
    'execId'?: string;
    'execType'?: string;
    'orderType'?: OrderData.OrderTypeEnum;
    'orderStatus'?: OrderData.OrderStatusEnum;
    'symbol'?: string;
    'orderQty'?: string;
    'price'?: string;
    'lastShares'?: string;
    'lastPrice'?: string;
    'cumQty'?: string;
    'leavesQty'?: string;
    'avgPrice'?: string;
    'side'?: string;
    'orderId'?: string;
    'account'?: string;
    'secType'?: string;
    'txTime'?: string;
    'rcptTime'?: string;
    'tif'?: string;
    'conid'?: string;
    'currency'?: string;
    'exchange'?: string;
    'listingExchange'?: string;
    'text'?: number;
    'warnings'?: OrderDataWarnings;
    /**
    * Commission currency
    */
    'commCurr'?: string;
    /**
    * Commissions
    */
    'comms'?: string;
    /**
    * Realized PnL
    */
    'realizedPnl'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "clientOrderId",
            "baseName": "clientOrderId",
            "type": "string"
        },
        {
            "name": "wagerEoL",
            "baseName": "wagerEoL",
            "type": "string"
        },
        {
            "name": "execId",
            "baseName": "execId",
            "type": "string"
        },
        {
            "name": "execType",
            "baseName": "execType",
            "type": "string"
        },
        {
            "name": "orderType",
            "baseName": "orderType",
            "type": "OrderData.OrderTypeEnum"
        },
        {
            "name": "orderStatus",
            "baseName": "orderStatus",
            "type": "OrderData.OrderStatusEnum"
        },
        {
            "name": "symbol",
            "baseName": "symbol",
            "type": "string"
        },
        {
            "name": "orderQty",
            "baseName": "orderQty",
            "type": "string"
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "string"
        },
        {
            "name": "lastShares",
            "baseName": "lastShares",
            "type": "string"
        },
        {
            "name": "lastPrice",
            "baseName": "lastPrice",
            "type": "string"
        },
        {
            "name": "cumQty",
            "baseName": "cumQty",
            "type": "string"
        },
        {
            "name": "leavesQty",
            "baseName": "leavesQty",
            "type": "string"
        },
        {
            "name": "avgPrice",
            "baseName": "avgPrice",
            "type": "string"
        },
        {
            "name": "side",
            "baseName": "side",
            "type": "string"
        },
        {
            "name": "orderId",
            "baseName": "orderId",
            "type": "string"
        },
        {
            "name": "account",
            "baseName": "account",
            "type": "string"
        },
        {
            "name": "secType",
            "baseName": "secType",
            "type": "string"
        },
        {
            "name": "txTime",
            "baseName": "txTime",
            "type": "string"
        },
        {
            "name": "rcptTime",
            "baseName": "rcptTime",
            "type": "string"
        },
        {
            "name": "tif",
            "baseName": "tif",
            "type": "string"
        },
        {
            "name": "conid",
            "baseName": "conid",
            "type": "string"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "exchange",
            "baseName": "exchange",
            "type": "string"
        },
        {
            "name": "listingExchange",
            "baseName": "listingExchange",
            "type": "string"
        },
        {
            "name": "text",
            "baseName": "text",
            "type": "number"
        },
        {
            "name": "warnings",
            "baseName": "warnings",
            "type": "OrderDataWarnings"
        },
        {
            "name": "commCurr",
            "baseName": "commCurr",
            "type": "string"
        },
        {
            "name": "comms",
            "baseName": "comms",
            "type": "string"
        },
        {
            "name": "realizedPnl",
            "baseName": "realizedPnl",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return OrderData.attributeTypeMap;
    }
}

export namespace OrderData {
    export enum OrderTypeEnum {
        _1Market = <any> '1 \"Market\"',
        _2Limit = <any> '2 \"Limit\"',
        _3Stop = <any> '3 \"Stop\"',
        _4StopLimit = <any> '4 \"Stop Limit\"'
    }
    export enum OrderStatusEnum {
        _1InvalidOrderStatus = <any> '-1 \"Invalid Order Status\"',
        _0New = <any> '0 \"New\"',
        _1PartiallyFilled = <any> '1 \"Partially Filled\"',
        _2Filled = <any> '2 \"Filled\"',
        _3DoneForTheDay = <any> '3 \"Done for the Day\"',
        _4Cancelled = <any> '4 \"Cancelled\"',
        _5Replaced = <any> '5 \"Replaced\"',
        _6PendingCancelReplace = <any> '6 \"Pending Cancel Replace\"',
        _7Stopped = <any> '7 \"Stopped\"',
        _8Rejected = <any> '8 \"Rejected\"',
        _9Suspended = <any> '9 \"Suspended\"',
        APendingNew = <any> 'A \"Pending New\"',
        BCalculated = <any> 'B \"Calculated\"',
        CExpired = <any> 'C \"Expired\"',
        DPendingCancel = <any> 'D \"Pending Cancel\"',
        EPendingReplace = <any> 'E \"Pending Replace\"'
    }
}

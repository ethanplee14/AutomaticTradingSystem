/**
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { InlineResponse20031Rules } from './inlineResponse20031Rules';

export class InlineResponse20031 {
    /**
    * Classification of Financial Instrument codes
    */
    'cfi_code'?: string;
    /**
    * Underlying Symbol for contract
    */
    'symbol'?: string;
    'cusip'?: string;
    /**
    * Expiration Date in the format YYYYMMDD
    */
    'expiry_full'?: number;
    /**
    * IBKRs contract identifier
    */
    'con_id'?: number;
    /**
    * Date on which the underlying transaction settles if the option is exercised
    */
    'maturity_date'?: number;
    /**
    * Specific group of companies or businesses.
    */
    'industry'?: string;
    /**
    * Asset Class of the contract
    */
    'instrument_type'?: string;
    /**
    * Designation of the contract
    */
    'trading_class'?: string;
    /**
    * Comma separated list of exchanges or trading venues
    */
    'valid_exchanges'?: string;
    /**
    * Allowed to sell shares that you own
    */
    'allow_sell_long'?: boolean;
    /**
    * Supports zero commission trades
    */
    'is_zero_commission_security'?: boolean;
    /**
    * Contracts symbol from primary exchange. For options it is the OCC symbol.
    */
    'local_symbol'?: string;
    'classifier'?: string;
    /**
    * Currency contract trades in
    */
    'currency'?: string;
    /**
    * Formatted contract parameters
    */
    'text'?: string;
    /**
    * IBKRs contract identifier for the underlying instrument
    */
    'underlying_con_id'?: number;
    /**
    * Provides trading outside of Regular Trading Hours
    */
    'r_t_h'?: boolean;
    /**
    * numerical value of each point of price movement
    */
    'multiplier'?: string;
    /**
    * fixed price at which the owner of the option buys or sells the underlying
    */
    'strike'?: string;
    /**
    * Put or Call of the option
    */
    'right'?: string;
    /**
    * Legal entity for underlying contract
    */
    'underlying_issuer'?: string;
    /**
    * Month the contract must be satisfied by making or accepting delivery
    */
    'contract_month'?: string;
    /**
    * Contracts company name
    */
    'company_name'?: string;
    /**
    * Support IBKRs SMART routing
    */
    'smart_available'?: boolean;
    /**
    * Primary Exchange, Routing or Trading Venue
    */
    'exchange'?: string;
    'rules'?: Array<InlineResponse20031Rules>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "cfi_code",
            "baseName": "cfi_code",
            "type": "string"
        },
        {
            "name": "symbol",
            "baseName": "symbol",
            "type": "string"
        },
        {
            "name": "cusip",
            "baseName": "cusip",
            "type": "string"
        },
        {
            "name": "expiry_full",
            "baseName": "expiry_full",
            "type": "number"
        },
        {
            "name": "con_id",
            "baseName": "con_id",
            "type": "number"
        },
        {
            "name": "maturity_date",
            "baseName": "maturity_date",
            "type": "number"
        },
        {
            "name": "industry",
            "baseName": "industry",
            "type": "string"
        },
        {
            "name": "instrument_type",
            "baseName": "instrument_type",
            "type": "string"
        },
        {
            "name": "trading_class",
            "baseName": "trading_class",
            "type": "string"
        },
        {
            "name": "valid_exchanges",
            "baseName": "valid_exchanges",
            "type": "string"
        },
        {
            "name": "allow_sell_long",
            "baseName": "allow_sell_long",
            "type": "boolean"
        },
        {
            "name": "is_zero_commission_security",
            "baseName": "is_zero_commission_security",
            "type": "boolean"
        },
        {
            "name": "local_symbol",
            "baseName": "local_symbol",
            "type": "string"
        },
        {
            "name": "classifier",
            "baseName": "classifier",
            "type": "string"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "text",
            "baseName": "text",
            "type": "string"
        },
        {
            "name": "underlying_con_id",
            "baseName": "underlying_con_id",
            "type": "number"
        },
        {
            "name": "r_t_h",
            "baseName": "r_t_h",
            "type": "boolean"
        },
        {
            "name": "multiplier",
            "baseName": "multiplier",
            "type": "string"
        },
        {
            "name": "strike",
            "baseName": "strike",
            "type": "string"
        },
        {
            "name": "right",
            "baseName": "right",
            "type": "string"
        },
        {
            "name": "underlying_issuer",
            "baseName": "underlying_issuer",
            "type": "string"
        },
        {
            "name": "contract_month",
            "baseName": "contract_month",
            "type": "string"
        },
        {
            "name": "company_name",
            "baseName": "company_name",
            "type": "string"
        },
        {
            "name": "smart_available",
            "baseName": "smart_available",
            "type": "boolean"
        },
        {
            "name": "exchange",
            "baseName": "exchange",
            "type": "string"
        },
        {
            "name": "rules",
            "baseName": "rules",
            "type": "Array<InlineResponse20031Rules>"
        }    ];

    static getAttributeTypeMap() {
        return InlineResponse20031.attributeTypeMap;
    }
}


/**
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AlertRequestConditions } from './alertRequestConditions';

export class AlertRequest {
    /**
    * orderId is required when modifying alert. You can get it from /iserver/account/{accountId}/alerts 
    */
    'orderId'?: number;
    /**
    * name of alert
    */
    'alertName'?: string;
    /**
    * The message you want to receive via email or text message
    */
    'alertMessage'?: string;
    /**
    * whether alert is repeatable or not, so value can only be 0 or 1, this has to be 1 for MTA alert
    */
    'alertRepeatable'?: number;
    /**
    * email address to receive alert
    */
    'email'?: string;
    /**
    * whether allowing to send email or not, so value can only be 0 or 1, 
    */
    'sendMessage'?: number;
    /**
    * time in force, can only be GTC or GTD
    */
    'tif'?: string;
    /**
    * format, YYYYMMDD-HH:mm:ss, please NOTE this will only work when tif is GTD 
    */
    'expireTime'?: string;
    /**
    * value can only be 0 or 1, set to 1 if the alert can be triggered outside regular trading equitiesMarketHours.
    */
    'outsideRth'?: number;
    /**
    * value can only be 0 or 1, set to 1 to enable the alert only in IBKR mobile 
    */
    'iTWSOrdersOnly'?: number;
    /**
    * value can only be 0 or 1, set to 1 to allow to show alert in pop-ups
    */
    'showPopup'?: number;
    /**
    * for MTA alert only, each user has a unique toolId and it will stay the same, do not send for normal alert 
    */
    'toolId'?: number;
    /**
    * audio message to play when alert is triggered
    */
    'playAudio'?: string;
    'conditions'?: Array<AlertRequestConditions>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "orderId",
            "baseName": "orderId",
            "type": "number"
        },
        {
            "name": "alertName",
            "baseName": "alertName",
            "type": "string"
        },
        {
            "name": "alertMessage",
            "baseName": "alertMessage",
            "type": "string"
        },
        {
            "name": "alertRepeatable",
            "baseName": "alertRepeatable",
            "type": "number"
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string"
        },
        {
            "name": "sendMessage",
            "baseName": "sendMessage",
            "type": "number"
        },
        {
            "name": "tif",
            "baseName": "tif",
            "type": "string"
        },
        {
            "name": "expireTime",
            "baseName": "expireTime",
            "type": "string"
        },
        {
            "name": "outsideRth",
            "baseName": "outsideRth",
            "type": "number"
        },
        {
            "name": "iTWSOrdersOnly",
            "baseName": "iTWSOrdersOnly",
            "type": "number"
        },
        {
            "name": "showPopup",
            "baseName": "showPopup",
            "type": "number"
        },
        {
            "name": "toolId",
            "baseName": "toolId",
            "type": "number"
        },
        {
            "name": "playAudio",
            "baseName": "playAudio",
            "type": "string"
        },
        {
            "name": "conditions",
            "baseName": "conditions",
            "type": "Array<AlertRequestConditions>"
        }    ];

    static getAttributeTypeMap() {
        return AlertRequest.attributeTypeMap;
    }
}


/**
 * Client Portal Web API
 * Production version of the Client Portal Web API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { InlineResponse20031CqtTypes } from './inlineResponse20031CqtTypes';
import { InlineResponse20031FraqTypes } from './inlineResponse20031FraqTypes';
import { InlineResponse20031IbalgoTypes } from './inlineResponse20031IbalgoTypes';
import { InlineResponse20031OrderDefaults } from './inlineResponse20031OrderDefaults';
import { InlineResponse20031OrderTypes } from './inlineResponse20031OrderTypes';
import { InlineResponse20031OrderTypesOutside } from './inlineResponse20031OrderTypesOutside';
import { InlineResponse20031TifTypes } from './inlineResponse20031TifTypes';

export class InlineResponse20031Rules {
    'error'?: string;
    'orderTypes'?: Array<InlineResponse20031OrderTypes>;
    'ibalgoTypes'?: Array<InlineResponse20031IbalgoTypes>;
    'fraqTypes'?: Array<InlineResponse20031FraqTypes>;
    'cqtTypes'?: Array<InlineResponse20031CqtTypes>;
    /**
    * If object returned will provide the defaults based on user settings
    */
    'orderDefaults'?: Array<InlineResponse20031OrderDefaults>;
    'orderTypesOutside'?: Array<InlineResponse20031OrderTypesOutside>;
    /**
    * Default quantity
    */
    'defaultSize'?: number;
    /**
    * cash value
    */
    'cashSize'?: number;
    /**
    * increment quantity value
    */
    'sizeIncrement'?: number;
    'tifTypes'?: Array<InlineResponse20031TifTypes>;
    /**
    * Default time in force value
    */
    'defaultTIF'?: string;
    /**
    * Limit price
    */
    'limitPrice'?: number;
    /**
    * Stop price
    */
    'stopprice'?: number;
    /**
    * Order origin designation for US securities options and Options Clearing Corporation
    */
    'orderOrigination'?: number;
    /**
    * order preview required
    */
    'preview'?: boolean;
    'displaySize'?: number;
    /**
    * decimal places for fractional order size
    */
    'fraqInt'?: number;
    /**
    * Cash currency for the contract
    */
    'cashCcy'?: string;
    /**
    * Increment value for cash quantity
    */
    'cashQtyIncr'?: number;
    /**
    * Price Magnifier
    */
    'priceMagnifier'?: number;
    /**
    * trading negative price support
    */
    'negativeCapable'?: boolean;
    /**
    * Price increment value
    */
    'increment'?: number;
    /**
    * Number of digits for price increment
    */
    'incrementDigits'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "error",
            "baseName": "error",
            "type": "string"
        },
        {
            "name": "orderTypes",
            "baseName": "orderTypes",
            "type": "Array<InlineResponse20031OrderTypes>"
        },
        {
            "name": "ibalgoTypes",
            "baseName": "ibalgoTypes",
            "type": "Array<InlineResponse20031IbalgoTypes>"
        },
        {
            "name": "fraqTypes",
            "baseName": "fraqTypes",
            "type": "Array<InlineResponse20031FraqTypes>"
        },
        {
            "name": "cqtTypes",
            "baseName": "cqtTypes",
            "type": "Array<InlineResponse20031CqtTypes>"
        },
        {
            "name": "orderDefaults",
            "baseName": "orderDefaults",
            "type": "Array<InlineResponse20031OrderDefaults>"
        },
        {
            "name": "orderTypesOutside",
            "baseName": "orderTypesOutside",
            "type": "Array<InlineResponse20031OrderTypesOutside>"
        },
        {
            "name": "defaultSize",
            "baseName": "defaultSize",
            "type": "number"
        },
        {
            "name": "cashSize",
            "baseName": "cashSize",
            "type": "number"
        },
        {
            "name": "sizeIncrement",
            "baseName": "sizeIncrement",
            "type": "number"
        },
        {
            "name": "tifTypes",
            "baseName": "tifTypes",
            "type": "Array<InlineResponse20031TifTypes>"
        },
        {
            "name": "defaultTIF",
            "baseName": "defaultTIF",
            "type": "string"
        },
        {
            "name": "limitPrice",
            "baseName": "limitPrice",
            "type": "number"
        },
        {
            "name": "stopprice",
            "baseName": "stopprice",
            "type": "number"
        },
        {
            "name": "orderOrigination",
            "baseName": "orderOrigination",
            "type": "number"
        },
        {
            "name": "preview",
            "baseName": "preview",
            "type": "boolean"
        },
        {
            "name": "displaySize",
            "baseName": "displaySize",
            "type": "number"
        },
        {
            "name": "fraqInt",
            "baseName": "fraqInt",
            "type": "number"
        },
        {
            "name": "cashCcy",
            "baseName": "cashCcy",
            "type": "string"
        },
        {
            "name": "cashQtyIncr",
            "baseName": "cashQtyIncr",
            "type": "number"
        },
        {
            "name": "priceMagnifier",
            "baseName": "priceMagnifier",
            "type": "number"
        },
        {
            "name": "negativeCapable",
            "baseName": "negativeCapable",
            "type": "boolean"
        },
        {
            "name": "increment",
            "baseName": "increment",
            "type": "number"
        },
        {
            "name": "incrementDigits",
            "baseName": "incrementDigits",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return InlineResponse20031Rules.attributeTypeMap;
    }
}

